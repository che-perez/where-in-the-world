{"version":3,"sources":["components/BorderCountries.jsx","components/SingleCountry.jsx","components/SearchFilter.jsx","components/Countries.jsx","App.js","reportWebVitals.js","index.js"],"names":["BorderCountries","props","borderCountry","countries","filter","country","alpha3Code","countryCode","className","map","idx","to","name","replace","SingleCountry","countryName","useParams","countryname","countryDetails","src","flag","alt","nativeName","population","toLocaleString","region","subregion","capital","topLevelDomain","currencies","languages","language","length","borders","code","SearchFilter","value","searchCountry","placeholder","onChange","e","setSearchCountry","target","htmlFor","id","setCurrentRegion","changeRegion","Countries","path","countriesList","App","useState","setCountriesList","currentRegion","bacgroundMode","setBackgroundMode","useEffect","fetch","then","res","json","data","filteredRegion","onClick","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.418ef045.chunk.js","sourcesContent":["import { Link } from 'react-router-dom';\n\nfunction BorderCountries(props) {\n\n    let borderCountry = props.countries.filter(country => country.alpha3Code === props.countryCode );\n\n  return (\n      <li className=\"borders-countries__list--item\">\n          {borderCountry.map((country, idx) => {\n              return (\n                <Link className=\"borders-countries__country-link link-btn\" key={ idx } to={`/${country.name.replace(/ /g, \"-\")}`}>\n                    { country.name }\n                </Link>\n              )\n          })}\n      </li>\n  );\n}\n\nexport default BorderCountries;","import { useParams, Link } from 'react-router-dom';\nimport BorderCountries from './BorderCountries';\n\nfunction SingleCountry(props) {\n    let { countryname } = useParams();\n    let countryName = countryname.replace(/-/g, ' ');\n\n    let countryDetails = props.countries.filter(country => country.name === countryName );\n\n  return (\n      <div className=\"single-country\">\n          <Link className=\"link-btn\" to=\"/\"><ion-icon name=\"arrow-back-outline\"></ion-icon>Back</Link>\n          {countryDetails.map((country, idx) => {\n              return (\n                  <div className=\"single-country__container\" key={idx}>\n                    <div className=\"single-country__container--flag\">\n                        <img src={ country.flag } alt={ country.name }/>\n                    </div>\n                    <div className=\"single-country__container--details\">\n                        <h2>{ country.name }</h2>\n                        <p className=\"detail\"><span className=\"detail-title\">Native Name:</span> {country.nativeName}</p>\n                        <p className=\"detail\"><span className=\"detail-title\">Population:</span> {country.population.toLocaleString('en-US')}</p>\n                        <p className=\"detail\"><span className=\"detail-title\">Region:</span> {country.region}</p>\n                        <p className=\"detail\"><span className=\"detail-title\">Sub Region:</span> {country.subregion}</p>\n                        <p className=\"detail\"><span className=\"detail-title\">Capital:</span> {country.capital ? country.capital  : \"None\"}</p>\n                        <p className=\"detail\"><span className=\"detail-title\">Top Level Domain:</span> {country.topLevelDomain[0]}</p>\n                        <p className=\"detail\"><span className=\"detail-title\">Currencies:</span> {country.currencies[0].name}</p>\n                        <p className=\"detail languages\">\n                            <span className=\"detail-title\">Languages: </span>\n                            {country.languages.map((language, idx) => {\n                                if(idx === (country.languages.length - 1)) {\n                                    return (\n                                        <span key={idx}>{ language.name }</span>\n                                    )\n                                } else {\n                                    return (\n                                        <span key={idx}>{`${language.name}, `}</span>\n                                    )\n                                }\n                            }\n                            )}\n                        </p>\n                        {country.borders.length > 0 ?\n                        <div className=\"borders-countries\">\n                            <span>Border Countries:</span>\n                            <ul className=\"borders-countries__list\">\n                                {country.borders.map(code => \n                                    <BorderCountries countries={props.countries} countryCode={ code }/>\n                                )}\n                            </ul>\n                        </div> : '' }\n                    </div>\n                  </div>\n              )\n          })}\n      </div>\n  );\n}\n\nexport default SingleCountry;","\nfunction SearchFilter(props) {\n\n    const changeRegion = (e) => props.setCurrentRegion(e.target.value)\n    \n  return (\n      <div className=\"search-filter-container\">\n        <div className=\"search-filter-container__search-field\">\n            <input value={props.searchCountry} placeholder=\"Search for a country...\" onChange={e => props.setSearchCountry(e.target.value)} />\n        </div>\n        <div className=\"search-filter-container__filter-field\">\n            <div>\n                <label htmlFor=\"regions\">Filter by Region: </label>\n                <select id=\"regions\" name=\"regions\" onChange={e => changeRegion(e)}>\n                    <option value=\"All\">All</option>\n                    <option value=\"Africa\">Africa</option>\n                    <option value=\"Americas\">Americas</option>\n                    <option value=\"Asia\">Asia</option>\n                    <option value=\"Europe\">Europe</option>\n                    <option value=\"Oceania\">Oceania</option>\n                    <option value=\"Polar\">Polar</option>\n                </select>\n            </div>\n        </div>\n      </div>\n  );\n}\n\nexport default SearchFilter;","import { Switch, Route, Link } from 'react-router-dom';\n\nimport SingleCountry from './SingleCountry';\nimport SearchFilter from './SearchFilter';\n\nfunction Countries(props) {\n\n  return (\n      <>\n        <Switch>\n            <Route path=\"/:countryname\">\n                <SingleCountry countries={ props.countriesList }/>\n            </Route>\n            <Route path=\"/\">\n                <SearchFilter setCurrentRegion={props.setCurrentRegion} searchCountry={props.searchCountry} setSearchCountry={props.setSearchCountry}/>\n                <ul className=\"countries-list\">\n                    {props.countriesList.map((country, idx) => {\n                        return (\n                            <Link key={ idx } to={`/${country.name.replace(/ /g, \"-\")}`}>\n                                <li className=\"countries-list__item\">\n                                    <div className=\"countries-list__item--flag\">\n                                        <img className=\"countries-list__item--flag__img\" src={ country.flag } alt={ country.name }/>\n                                    </div>\n                                    <div className=\"countries-list__item--info\">\n                                        <h2 className=\"countries-list__item--info__heading\">{ country.name }</h2>\n                                        <p className=\"countries-list__item--info__details\"><span>Population:</span> {country.population.toLocaleString('en-US')}</p>\n                                        <p className=\"countries-list__item--info__details\"><span>Region:</span> {country.region}</p>\n                                        <p className=\"countries-list__item--info__details\"><span>Capital:</span> {country.capital ? country.capital  : \"None\"}</p>\n                                    </div>\n                                </li>\n                            </Link>\n                        )\n                    })}\n                </ul>\n            </Route>\n        </Switch>\n      </>\n  );\n}\n\nexport default Countries;","import { useState, useEffect } from 'react';\nimport { BrowserRouter as Router, Link } from 'react-router-dom';\n\nimport './scss/style.scss'\n\nimport Countries from './components/Countries';\n\nfunction App() {\n\n  const [countriesList, setCountriesList] = useState([]);\n  const [currentRegion, setCurrentRegion] = useState('All');\n  const [searchCountry, setSearchCountry] = useState('');\n  const [bacgroundMode, setBackgroundMode] = useState(false);\n\n  useEffect(() => {\n    fetch(`https://restcountries.eu/rest/v2/all`)\n      .then(res => res.json())\n      .then(data => {\n        setCountriesList(data)\n      })\n  },[]);\n\n  let filteredRegion = countriesList.filter(country => {\n    if(currentRegion === \"All\" && searchCountry === '') {\n      return country\n    } else if (searchCountry) {\n      return country.name === searchCountry\n    } else {\n      return  country.region === currentRegion\n    }\n  })\n\n  return (\n    <Router>\n      <main className={`App ${bacgroundMode ? 'darkmode' : 'lightmode'}`}>\n        <header className=\"App_header\">\n          <div className=\"App_header--inside\">\n            <Link to=\"/\"><h1 className=\"App_header--heading\">Where in the World?</h1></Link>\n            <button onClick={() => setBackgroundMode(!bacgroundMode)} className=\"App_header--button\">\n              <ion-icon name={bacgroundMode ? \"moon\" : \"moon-outline\"}></ion-icon>Dark Mode</button>\n          </div>\n        </header>\n        <div className=\"container\">\n          <section className=\"App_content\">\n            <Countries countriesList={ filteredRegion }\n                      setCurrentRegion={setCurrentRegion}\n                      searchCountry={searchCountry}\n                      setSearchCountry={setSearchCountry} />\n          </section>\n        </div>\n      </main>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}